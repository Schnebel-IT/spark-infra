---
# Kubernetes master node configuration
- name: Check if cluster is already initialized
  stat:
    path: /etc/kubernetes/admin.conf
  register: kubeconfig_exists
  
- name: Initialize Kubernetes cluster
  command: |
    kubeadm init \
      --pod-network-cidr={{ kubernetes.pod_subnet }} \
      --service-cidr={{ kubernetes.service_subnet }} \
      --apiserver-advertise-address={{ ansible_default_ipv4.address }} \
      --node-name={{ inventory_hostname }}
  register: kubeadm_init
  when: not kubeconfig_exists.stat.exists
  
- name: Create .kube directory for root
  file:
    path: /root/.kube
    state: directory
    mode: '0755'
    
- name: Copy admin.conf to .kube/config for root
  copy:
    src: /etc/kubernetes/admin.conf
    dest: /root/.kube/config
    remote_src: true
    mode: '0600'
    
- name: Create .kube directory for ansible user
  file:
    path: "/home/{{ ansible_user }}/.kube"
    state: directory
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    mode: '0755'
    
- name: Copy admin.conf to user .kube/config
  copy:
    src: /etc/kubernetes/admin.conf
    dest: "/home/{{ ansible_user }}/.kube/config"
    remote_src: true
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    mode: '0600'
    
- name: Get join command
  command: kubeadm token create --print-join-command
  register: join_command
  when: not kubeconfig_exists.stat.exists
  
- name: Save join command to file
  copy:
    content: "{{ join_command.stdout }}"
    dest: /tmp/kubernetes-join-command
    mode: '0600'
  when: join_command is defined and join_command.stdout is defined
  
- name: Fetch join command to local machine
  fetch:
    src: /tmp/kubernetes-join-command
    dest: "{{ playbook_dir }}/../files/kubernetes-join-command"
    flat: true
  when: join_command is defined and join_command.stdout is defined
  
- name: Wait for API server to be ready
  wait_for:
    port: 6443
    host: "{{ ansible_default_ipv4.address }}"
    timeout: 300
    
- name: Install bash completion for kubectl
  shell: |
    kubectl completion bash > /etc/bash_completion.d/kubectl
    echo 'alias k=kubectl' >> /home/{{ ansible_user }}/.bashrc
    echo 'complete -F __start_kubectl k' >> /home/{{ ansible_user }}/.bashrc
  environment:
    KUBECONFIG: /etc/kubernetes/admin.conf
